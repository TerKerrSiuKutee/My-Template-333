#include <bits/stdc++.h>
using namespace std;
 
using ll = long long;
using ull = unsigned long long;
using db = double;
using ld = long double;
using str = string;

// loops
#define FOR(i,a,b) for (int i = (a); i <= (int) (b); ++i)
#define FORD(i,a,b) for (int i = (a); i >= (int) (b); --i)
#define REP(i,a,b) for (int i = (a); i < (int) (b); ++i)
#define each(a,x) for (auto& a: x)

// pairs
using pii = pair<int,int>;
using pll = pair<ll,ll>;
using pdd = pair<db,db>;
using pld = pair<ld,ld>;
#define mp make_pair
#define fi first
#define se second

// vectors
template<class T> using V = vector<T>;
template<class T> using VV = V<V<T>>;
using vi = V<int>;
using vb = V<bool>;
using vl = V<ll>;
using vd = V<db>;
using vld = V<ld>;
using vs = V<str>;
using vpi = V<pii>;
using vpl = V<pll>;
using vpd = V<pdd>;
using vpld = V<pld>;

#define sz(x) (int) (x).size()
#define len(x) (int) (x).length()
#define bg(x) begin(x)
#define all(x) bg(x), end(x)
#define rall(x) x.rbegin(), x.rend()
#define rsz resize
#define ins insert 
#define pb push_back
#define eb emplace_back
#define ft front()
#define bk back()

// others
template<class T> using pqg = priority_queue<T,vector<T>,greater<T>>;
#define ms(a, b) memset(a, (b), sizeof(a))

#define lb lower_bound
#define ub upper_bound
template<class T> int lwb(V<T>& a, const T& b) { return (int) (lb(all(a),b) - bg(a)); }
template<class T> int upb(V<T>& a, const T& b) { return (int) (ub(all(a),b) - bg(a)); }

// in and out
#define setp(x) fixed << setprecision((int) x)
#define endl "\n"
template<class T, class U> ostream& operator<<(ostream& os, const pair<T,U>& p) { return os << "{" << p.fi << "," << p.se << "}"; }
template<class T> ostream& operator<<(ostream& os, const V<T>& v) { os << "{"; REP(i,0,sz(v) - 1) os << v[i] << ","; return os << v[sz(v) - 1] << "}"; }

const int MOD = (int) 1e9 + 7; // 998244353;
const int MAXN = (int) 2e5 + 5;
const int imax = INT_MAX;
const int imin = INT_MIN;
const ll BIG = (ll) 1e18; // not too close to LLONG_MAX
const db PI = acos((db) - 1);
const vi d4x = { -1, 0, 1, 0 }, d4y = { 0, 1, 0, -1 };
const vi d8x = { -1, -1, 0, 1, 1, 1, 0, -1 }, d8y = { 0, 1, 1, 1, 0, -1, -1, -1 };

// SOME USEFULL STUFFS !!!

constexpr ll p2(ll x) { return 1 << x; }

ll cdiv(ll a, ll b) { return a / b + ((a ^ b) > 0 && a % b); } // divide a by b rounded up
ll fdiv(ll a, ll b) { return a / b - ((a ^ b) < 0 && a % b); } // divide a by b rounded down

template<class T> bool ckmin(T& a, const T& b) { return b < a ? a = b, 1 : 0; } // a = min(a,b);
template<class T> bool ckmax(T& a, const T& b) { return a < b ? a = b, 1 : 0; } // a = max(a,b);

// sort and remove duplicates
template<class T> void remDup(vector<T>& v) { sort(all(v)); v.erase(unique(all(v)),end(v)); }

// hmm quick power
template<class T> T qpow(T a, ll b) { T r = 1; do { if (b & 1) r *= a; a *= a; } while (b >>= 1); return r; }

// check if N is power of 2
bool ispow2(ll n) { return n && (n & -n) == n; }

// #define TIMER // <--- enable if you need to know the excution time :333
// #define USACO

inline namespace FileIO
{
    void setIn(str s)  { freopen(s.c_str(),"r",stdin); }
    void setOut(str s) { freopen(s.c_str(),"w",stdout); }
    void setIO(str s = "") {
        ios_base::sync_with_stdio(false);
        cin.tie(NULL); cout.tie(NULL);
        if (len(s)) {
            #ifdef USACO
            setIn(s + ".in"), setOut(s + ".out");
            #else
            setIn(s + ".inp"), setOut(s + ".out");
            #endif
        }
    }
}

void solve()
{
    
}

int main()
{
    #ifdef TIMER
    auto start = chrono::high_resolution_clock::now();
    #endif

    setIO();

    int tc = 1;
    // cin >> tc; // More than 1 testcase?

    while (tc--) {
        solve();
    } 

    #ifdef TIMER
    auto stop = chrono::high_resolution_clock::now();
    auto duration = std::chrono::duration_cast<chrono::microseconds>(stop - start);
    cout << "Execution time: " << duration.count() << " microseconds" << endl;
    #endif

    return 0;
}

// CODED BY:
//  _____         _   __               _____ _       _   __      _
// |_   _|       | | / /              /  ___(_)     | | / /     | |
//   | | ___ _ __| |/ /  ___ _ __ _ __\ `--. _ _   _| |/ / _   _| |_ ___  ___ 
//   | |/ _ \ '__|    \ / _ \ '__| '__|`--. \ | | | |    \| | | | __/ _ \/ _ \
//   | |  __/ |  | |\  \  __/ |  | |  /\__/ / | |_| | |\  \ |_| | ||  __/  __/
//   \_/\___|_|  \_| \_/\___|_|  |_|  \____/|_|\__,_\_| \_/\__,_|\__\___|\___|
